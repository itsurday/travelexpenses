<apex:page docType="html-5.0" standardController="LongDistanceRide__c" extensions="LocationFinder,LongDistanceRideCtrlExt" showHeader="false" action="{!doRedirectDesktopDevices}">

    <c:importvisualstrap theme="default" />
    
    <style>  
        body{  
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;  
        }  
        .intro{  
            margin-top:20px;  
            font-size:140%;  
            font-weight: 200;  
        }  
    </style> 
    
    <c:visualstrapblock >
    
        <br/>
        
        <apex:form id="form">
            
            
            <!-- HIDDEN FIELDS -->
            <apex:inputHidden value="{!LongDistanceRide__c.lkp_LocationFrom__c}" id="locationFrom"/>
            <apex:inputHidden value="{!LongDistanceRide__c.lkp_LocationTo__c}" id="locationTo"/>
            <script type="text/javascript">
                locationFromId = '{!$Component.locationFrom}';
                locationToId = '{!$Component.locationTo}';
            </script>
            
            
            <!-- WARNINGS -->
            <apex:outputPanel layout="block" styleClass="container" rendered="{!hasMessages}">
                <c:alert type="danger">
                    <h5><apex:messages /></h5>
                </c:alert>
                
                <c:alert type="warning">
                    <h5>Please review all shown errors and try submitting again.</h5>
                </c:alert>
            </apex:outputPanel>
            
            
            <!-- BODY-->
            <apex:outputPanel title="Long Distance Ride" layout="block" styleClass="container" id="outputPanel">
                
                <c:panel title="Long Distance Ride" type="default" >
        
                    <c:formblock alignment="horizontal" >
        
                        <c:formgroup >
                            <c:column type="col-md-1">
                                <apex:outputLabel value="From"/>
                            </c:column>
                            <c:column type="col-md-5" >
                                <apex:inputField id="from" value="{!LongDistanceRide__c.txt_From__c}" styleClass="form-control" html-placeholder="Start" required="true"/>
                                <script type="text/javascript">fromId = '{!$Component.from}';</script>
                            </c:column>
                            <c:column type="col-md-1">
                                <apex:outputLabel value="To"/>
                            </c:column>
                            <c:column type="col-md-5" id="toColumn">
                                <apex:inputField id="to" value="{!LongDistanceRide__c.txt_To__c}" styleClass="form-control" html-placeholder="Destination" required="true"/>
                                <script type="text/javascript">toId = '{!$Component.to}';</script>
                            </c:column>
                        </c:formgroup>
            
                        <c:formgroup >
                            <c:column type="col-md-1">
                                <apex:outputLabel value="Departure"/>
                            </c:column>
                            <c:column type="col-md-5">
                                <div class='input-group date' id='datetimepickerDeparture'>
                                    <apex:inputField value="{!LongDistanceRide__c.dtm_DepartureTime__c}" type="text" showDatePicker="false" styleClass="form-control" required="true"/>
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </c:column>  
                            <c:column type="col-md-1">
                                <apex:outputLabel value="Arrival"/>
                            </c:column>
                            <c:column type="col-md-5">
                                <div class='input-group date' id='datetimepickerArrival'>
                                    <apex:inputField value="{!LongDistanceRide__c.dtm_ArrivalTime__c}" type="text" showDatePicker="false" styleClass="form-control" required="true"/>
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </c:column>
                        </c:formgroup>
           
                    </c:formblock>
                
                    <apex:actionRegion >
                        <c:formblock id="round" alignment="horizontal">
                                               
                            <c:formgroup >                           
                                <c:column type="col-md-1">
                                    <apex:outputLabel value="Round Trip"/>
                                </c:column>
                                <c:column type="col-md-1">
                                    <apex:inputCheckbox value="{!LongDistanceRide__c.chk_RoundTrip__c}" styleClass="switcher">
                                        <apex:actionSupport event="onchange" rerender="round"  onComplete="rerender();" />
                                    </apex:inputCheckbox>
                                </c:column>      
                            </c:formgroup>
                            
                            <c:formgroup rendered="{!(LongDistanceRide__c.chk_RoundTrip__c == true)}">   
                                <c:column type="col-md-1">
                                    <apex:outputLabel value="Return Departure"/>
                                </c:column>
                                <c:column type="col-md-5">
                                    <div class='input-group date' id='datetimepickerReturnDeparture'>
                                        <apex:inputField value="{!LongDistanceRide__c.dtm_ReturnDeparture__c}" type="text" showDatePicker="false" styleClass="form-control"/>
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </c:column>
                                <c:column type="col-md-1">
                                    <apex:outputLabel value="Return Arrival"/>
                                </c:column>
                                <c:column type="col-md-5">
                                    <div class='input-group date' id='datetimepickerReturnArrival'>
                                        <apex:inputField value="{!LongDistanceRide__c.dtm_ReturnArrival__c}" type="text" showDatePicker="false" styleClass="form-control"/>
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </c:column>
                            </c:formgroup>
                         
                        </c:formblock>
                    </apex:actionRegion>
                </c:panel>
    
                <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"/>
                <script type="text/javascript">
                    jQuery.noConflict();
        
                    jQuery(document).ready(function() {
                        renderSwitcher();
                        renderDateTimePicker();
                    });
                    
                    function rerender() {
                        renderSwitcher();
                        renderDateTimePicker();
                    }
                    
                    function renderSwitcher() {
                        jQuery.fn.bootstrapSwitch.defaults.size = 'large';
                        jQuery.fn.bootstrapSwitch.defaults.onColor = 'success';
                        jQuery.fn.bootstrapSwitch.defaults.offColor = 'default';
                        jQuery.fn.bootstrapSwitch.defaults.onText = 'Yes';
                        jQuery.fn.bootstrapSwitch.defaults.offText = 'No';
                        jQuery("input.switcher").bootstrapSwitch();
                    }
                    
                    function renderDateTimePicker() {
						var datetimeformat;
						var userLocale = "{!UserLocale}";
						
						if(userLocale == "de") {
							datetimeformat = "DD.MM.YYYY HH:mm";
						} 
						else if(userLocale == "us") {
							datetimeformat = "MM/DD/YYYY hh:mm A/PM";
						}
						
						jQuery("#datetimepickerDeparture, #datetimepickerArrival, #datetimepickerReturnDeparture, #datetimepickerReturnArrival").datetimepicker({
                            format: datetimeformat
                        });
					}
                </script>
                
                <center>
                    <apex:commandButton value="Save" action="{!doSaveRide}" oncomplete="redirect({!hasMessages})" rerender="form"
                                        styleClass="btn-lg btn-success" style="width:100%;"/>
                    <script type="text/javascript">
                        function redirect(saveFailed){
                            if(!saveFailed) {
                                sforce.one.navigateToSObject('{!LongDistanceRide__c.mdr_RentalVehicle__c}');
                            }
                        }
                    </script>
                </center>
                
                <br/><br/><br/>
                
            </apex:outputPanel>
        
        </apex:form>
        
        <!-- SCRIPTS -->
        
        <script src="https://maps.googleapis.com/maps/api/js?language=en&sensor=false&libraries=places" type="text/javascript"></script>
        <script type="text/javascript"> 
            
            google.maps.event.addDomListener(window, 'load', initializeAutoComplete);
            
            var fromId;
            var toId;
            var locationFromId;
            var locationToId;
            
            function initializeAutoComplete() {    
                var from;
                var to;
                var options = { types: ['(cities)'] };
                
                from = new google.maps.places.Autocomplete(document.getElementById(fromId), options);
                to = new google.maps.places.Autocomplete(document.getElementById(toId), options);
                
                google.maps.event.addListener(from, 'place_changed', findLocationFrom);
                google.maps.event.addListener(to, 'place_changed', findLocationTo);
            }
    
                
            function findLocationFrom() {
                var components = this.getPlace().address_components,
                city = 'n/a';
                country = 'n/a';
                if (components) {
                    for (var c = 0; c < components.length; ++c) {
                    console.log(components[c])
                        if(city == 'n/a') {                  
                            if (components[c].types.indexOf('postal_town') > -1) {
                                city = components[c].long_name;
                            }
                            if (components[c].types.indexOf('administrative_area_level_1') > -1) {
                                city = components[c].long_name;
                            }
                        } 
                        if (components[c].types.indexOf('locality') > -1) {
                            city = components[c].long_name;
                        }
                        if(components[c].types.indexOf('country') > -1 && components[c].types.indexOf('political') > -1 ) {                      
                            country = components[c].short_name; 
                        }
                    }
                }
                console.log('From: ' + city + ' - ' + country)        
                UP2GO_ITE.LocationFinder.findLocation(city, country, function(result, event) { 
                    document.getElementById(locationFromId).value = result;  
                });
            }
            
            
            function findLocationTo() {
                var components = this.getPlace().address_components,
                city = 'n/a';
                country = 'n/a';
                if (components) {
                    for (var c = 0; c < components.length; ++c) {
                    console.log(components[c])
                        if(city == 'n/a') {                  
                            if (components[c].types.indexOf('postal_town') > -1) {
                                city = components[c].long_name;
                            }
                            if (components[c].types.indexOf('administrative_area_level_1') > -1) {
                                city = components[c].long_name;
                            }
                        }              
                        if (components[c].types.indexOf('locality') > -1) {
                            city = components[c].long_name;
                        }
                        if(components[c].types.indexOf('country') > -1 && components[c].types.indexOf('political') > -1 ) {
                            country = components[c].short_name;
                        }
                    }
                }
                console.log('To: ' + city + ' - ' + country)
                UP2GO_ITE.LocationFinder.findLocation(city, country, function(result, event) {
                    document.getElementById(locationToId).value = result; 
                });
            }
                
            document.onkeypress = stopRKey;
            
            function stopRKey(evt) { 
                  var evt = (evt) ? evt : ((event) ? event : null); 
                  var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null); 
                  if ((evt.keyCode == 13) && (node.type=="text"))  {return false;} 
            }
        </script>
    </c:visualstrapblock>
</apex:page>